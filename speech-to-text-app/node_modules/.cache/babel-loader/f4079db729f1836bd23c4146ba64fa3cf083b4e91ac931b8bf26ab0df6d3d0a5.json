{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import axios from'axios';const initialState={transcript:'',isListening:false,translatedText:''};const speechSlice=createSlice({name:'speech',initialState,reducers:{startListening:state=>{state.isListening=true;},stopListening:state=>{state.isListening=false;},updateTranscript:(state,action)=>{state.transcript=action.payload;},updateTranslatedText:(state,action)=>{state.translatedText=action.payload;},resetTranscript:state=>{state.transcript='';state.translatedText='';}}});export const{startListening,stopListening,updateTranscript,updateTranslatedText,resetTranscript}=speechSlice.actions;// Thunk for translating text using MyMemory API\nexport const translateText=(text,targetLanguage)=>async dispatch=>{try{const response=await axios.get(`https://api.mymemory.translated.net/get`,{params:{q:text,langpair:`en|${targetLanguage}`}});dispatch(updateTranslatedText(response.data.responseData.translatedText));}catch(error){console.error('Translation error:',error);}};export default speechSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","transcript","isListening","translatedText","speechSlice","name","reducers","startListening","state","stopListening","updateTranscript","action","payload","updateTranslatedText","resetTranscript","actions","translateText","text","targetLanguage","dispatch","response","get","params","q","langpair","data","responseData","error","console","reducer"],"sources":["E:/personal Applications/speach to text converter/converter-speact-to-text/speech-to-text-app/src/store/speechSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  transcript: '',\r\n  isListening: false,\r\n  translatedText: '',\r\n};\r\n\r\nconst speechSlice = createSlice({\r\n  name: 'speech',\r\n  initialState,\r\n  reducers: {\r\n    startListening: (state) => {\r\n      state.isListening = true;\r\n    },\r\n    stopListening: (state) => {\r\n      state.isListening = false;\r\n    },\r\n    updateTranscript: (state, action) => {\r\n      state.transcript = action.payload;\r\n    },\r\n    updateTranslatedText: (state, action) => {\r\n      state.translatedText = action.payload;\r\n    },\r\n    resetTranscript: (state) => {\r\n      state.transcript = '';\r\n      state.translatedText = '';\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  startListening,\r\n  stopListening,\r\n  updateTranscript,\r\n  updateTranslatedText,\r\n  resetTranscript,\r\n} = speechSlice.actions;\r\n\r\n// Thunk for translating text using MyMemory API\r\nexport const translateText = (text, targetLanguage) => async (dispatch) => {\r\n  try {\r\n    \r\n    const response = await axios.get(`https://api.mymemory.translated.net/get`, {\r\n      params: {\r\n        q: text,\r\n        langpair: `en|${targetLanguage}`, \r\n      },\r\n    });\r\n    \r\n    dispatch(updateTranslatedText(response.data.responseData.translatedText));\r\n  } catch (error) {\r\n    console.error('Translation error:', error);\r\n  }\r\n};\r\n\r\nexport default speechSlice.reducer;\r\n\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,CACnBC,UAAU,CAAE,EAAE,CACdC,WAAW,CAAE,KAAK,CAClBC,cAAc,CAAE,EAClB,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGN,WAAW,CAAC,CAC9BO,IAAI,CAAE,QAAQ,CACdL,YAAY,CACZM,QAAQ,CAAE,CACRC,cAAc,CAAGC,KAAK,EAAK,CACzBA,KAAK,CAACN,WAAW,CAAG,IAAI,CAC1B,CAAC,CACDO,aAAa,CAAGD,KAAK,EAAK,CACxBA,KAAK,CAACN,WAAW,CAAG,KAAK,CAC3B,CAAC,CACDQ,gBAAgB,CAAEA,CAACF,KAAK,CAAEG,MAAM,GAAK,CACnCH,KAAK,CAACP,UAAU,CAAGU,MAAM,CAACC,OAAO,CACnC,CAAC,CACDC,oBAAoB,CAAEA,CAACL,KAAK,CAAEG,MAAM,GAAK,CACvCH,KAAK,CAACL,cAAc,CAAGQ,MAAM,CAACC,OAAO,CACvC,CAAC,CACDE,eAAe,CAAGN,KAAK,EAAK,CAC1BA,KAAK,CAACP,UAAU,CAAG,EAAE,CACrBO,KAAK,CAACL,cAAc,CAAG,EAAE,CAC3B,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXI,cAAc,CACdE,aAAa,CACbC,gBAAgB,CAChBG,oBAAoB,CACpBC,eACF,CAAC,CAAGV,WAAW,CAACW,OAAO,CAEvB;AACA,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAACC,IAAI,CAAEC,cAAc,GAAK,KAAO,CAAAC,QAAQ,EAAK,CACzE,GAAI,CAEF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArB,KAAK,CAACsB,GAAG,CAAC,yCAAyC,CAAE,CAC1EC,MAAM,CAAE,CACNC,CAAC,CAAEN,IAAI,CACPO,QAAQ,CAAE,MAAMN,cAAc,EAChC,CACF,CAAC,CAAC,CAEFC,QAAQ,CAACN,oBAAoB,CAACO,QAAQ,CAACK,IAAI,CAACC,YAAY,CAACvB,cAAc,CAAC,CAAC,CAC3E,CAAE,MAAOwB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAED,cAAe,CAAAvB,WAAW,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}