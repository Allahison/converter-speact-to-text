{"ast":null,"code":"var _jsxFileName = \"E:\\\\personal Applications\\\\speach to text converter\\\\speech-to-text-app\\\\src\\\\components\\\\SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startListening, stopListening, updateTranscript, resetTranscript } from '../store/speechSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nrecognition.continuous = true;\nrecognition.interimResults = true;\nconst SpeechToText = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    transcript,\n    isListening\n  } = useSelector(state => state.speech);\n  useEffect(() => {\n    if (isListening) {\n      recognition.start();\n      recognition.onresult = event => {\n        const transcriptText = Array.from(event.results).map(result => result[0].transcript).join('');\n        dispatch(updateTranscript(transcriptText));\n      };\n      recognition.onerror = event => {\n        console.error(\"Speech recognition error:\", event.error);\n      };\n    } else {\n      recognition.stop();\n    }\n  }, [isListening, dispatch]);\n  const handleStart = () => {\n    dispatch(startListening());\n  };\n  const handleStop = () => {\n    dispatch(stopListening());\n  };\n  const handleReset = () => {\n    dispatch(resetTranscript());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-to-text-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Speech to Text Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        disabled: isListening,\n        children: \"Start Listening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStop,\n        disabled: !isListening,\n        children: \"Stop Listening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset Transcript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      readOnly: true,\n      value: transcript,\n      placeholder: \"Your speech will appear here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"ZKETuzfY7fcRDLwmjLmeOTpPBtQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","startListening","stopListening","updateTranscript","resetTranscript","jsxDEV","_jsxDEV","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","interimResults","SpeechToText","_s","dispatch","transcript","isListening","state","speech","start","onresult","event","transcriptText","Array","from","results","map","result","join","onerror","console","error","stop","handleStart","handleStop","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","readOnly","value","placeholder","_c","$RefreshReg$"],"sources":["E:/personal Applications/speach to text converter/speech-to-text-app/src/components/SpeechToText.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startListening, stopListening, updateTranscript, resetTranscript } from '../store/speechSlice';\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognition();\r\nrecognition.continuous = true;\r\nrecognition.interimResults = true;\r\n\r\nconst SpeechToText = () => {\r\n  const dispatch = useDispatch();\r\n  const { transcript, isListening } = useSelector((state) => state.speech);\r\n\r\n  useEffect(() => {\r\n    if (isListening) {\r\n      recognition.start();\r\n\r\n      recognition.onresult = (event) => {\r\n        const transcriptText = Array.from(event.results)\r\n          .map(result => result[0].transcript)\r\n          .join('');\r\n        dispatch(updateTranscript(transcriptText));\r\n      };\r\n\r\n      recognition.onerror = (event) => {\r\n        console.error(\"Speech recognition error:\", event.error);\r\n      };\r\n    } else {\r\n      recognition.stop();\r\n    }\r\n  }, [isListening, dispatch]);\r\n\r\n  const handleStart = () => {\r\n    dispatch(startListening());\r\n  };\r\n\r\n  const handleStop = () => {\r\n    dispatch(stopListening());\r\n  };\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetTranscript());\r\n  };\r\n\r\n  return (\r\n    <div className=\"speech-to-text-container\">\r\n      <h2>Speech to Text Converter</h2>\r\n      <div className=\"controls\">\r\n        <button onClick={handleStart} disabled={isListening}>Start Listening</button>\r\n        <button onClick={handleStop} disabled={!isListening}>Stop Listening</button>\r\n        <button onClick={handleReset}>Reset Transcript</button>\r\n      </div>\r\n      <textarea readOnly value={transcript} placeholder=\"Your speech will appear here...\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechToText;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}