{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{startListening,stopListening,updateTranscript,resetTranscript,translateText}from'../store/speechSlice';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition;const recognition=new SpeechRecognition();recognition.continuous=true;recognition.interimResults=true;const SpeechToText=()=>{const dispatch=useDispatch();const{transcript,isListening,translatedText}=useSelector(state=>state.speech);const[targetLanguage,setTargetLanguage]=useState('es');// Default to Spanish\nconst[pastedText,setPastedText]=useState('');useEffect(()=>{if(isListening){recognition.start();recognition.onresult=event=>{const transcriptText=Array.from(event.results).map(result=>result[0].transcript).join('');dispatch(updateTranscript(transcriptText));};recognition.onerror=event=>{console.error(\"Speech recognition error:\",event.error);};}else{recognition.stop();}},[isListening,dispatch]);// Translate whenever transcript updates or pasted text changes\nuseEffect(()=>{if(transcript){dispatch(translateText(transcript,targetLanguage));}if(pastedText){dispatch(translateText(pastedText,targetLanguage));}},[transcript,pastedText,targetLanguage,dispatch]);const handleStart=()=>{dispatch(startListening());};const handleStop=()=>{dispatch(stopListening());};const handleReset=()=>{dispatch(resetTranscript());setPastedText('');// Reset pasted text\n};const handleLanguageChange=e=>{setTargetLanguage(e.target.value);};const handlePaste=e=>{const text=e.target.value;setPastedText(text);// Update pasted text state\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"speech-to-text-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Speech to Text Converter with Translation\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleStart,disabled:isListening,children:\"Start Listening\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleStop,disabled:!isListening,children:\"Stop Listening\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReset,children:\"Reset Transcript\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"language-selector\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Target Language:\"}),/*#__PURE__*/_jsxs(\"select\",{value:targetLanguage,onChange:handleLanguageChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"es\",children:\"Spanish\"}),/*#__PURE__*/_jsx(\"option\",{value:\"fr\",children:\"French\"}),/*#__PURE__*/_jsx(\"option\",{value:\"de\",children:\"German\"}),/*#__PURE__*/_jsx(\"option\",{value:\"zh\",children:\"Chinese\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ar\",children:\"Arabic\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ur\",children:\"Urdu\"}),\" \"]})]}),/*#__PURE__*/_jsx(\"textarea\",{readOnly:true,value:transcript,placeholder:\"Your speech will appear here...\"}),/*#__PURE__*/_jsx(\"textarea\",{value:pastedText,onChange:handlePaste,placeholder:\"Paste text to translate here...\",rows:\"4\"}),/*#__PURE__*/_jsx(\"textarea\",{readOnly:true,value:translatedText,placeholder:\"Translated text will appear here...\"})]});};export default SpeechToText;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","startListening","stopListening","updateTranscript","resetTranscript","translateText","jsx","_jsx","jsxs","_jsxs","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","interimResults","SpeechToText","dispatch","transcript","isListening","translatedText","state","speech","targetLanguage","setTargetLanguage","pastedText","setPastedText","start","onresult","event","transcriptText","Array","from","results","map","result","join","onerror","console","error","stop","handleStart","handleStop","handleReset","handleLanguageChange","e","target","value","handlePaste","text","className","children","onClick","disabled","onChange","readOnly","placeholder","rows"],"sources":["E:/personal Applications/speach to text converter/converter-speact-to-text/speech-to-text-app/src/components/SpeechToText.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startListening, stopListening, updateTranscript, resetTranscript, translateText } from '../store/speechSlice';\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognition();\r\nrecognition.continuous = true;\r\nrecognition.interimResults = true;\r\n\r\nconst SpeechToText = () => {\r\n  const dispatch = useDispatch();\r\n  const { transcript, isListening, translatedText } = useSelector((state) => state.speech);\r\n  const [targetLanguage, setTargetLanguage] = useState('es'); // Default to Spanish\r\n  const [pastedText, setPastedText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (isListening) {\r\n      recognition.start();\r\n\r\n      recognition.onresult = (event) => {\r\n        const transcriptText = Array.from(event.results)\r\n          .map(result => result[0].transcript)\r\n          .join('');\r\n        dispatch(updateTranscript(transcriptText));\r\n      };\r\n\r\n      recognition.onerror = (event) => {\r\n        console.error(\"Speech recognition error:\", event.error);\r\n      };\r\n    } else {\r\n      recognition.stop();\r\n    }\r\n  }, [isListening, dispatch]);\r\n\r\n  // Translate whenever transcript updates or pasted text changes\r\n  useEffect(() => {\r\n    if (transcript) {\r\n      dispatch(translateText(transcript, targetLanguage));\r\n    }\r\n    if (pastedText) {\r\n      dispatch(translateText(pastedText, targetLanguage));\r\n    }\r\n  }, [transcript, pastedText, targetLanguage, dispatch]);\r\n\r\n  const handleStart = () => {\r\n    dispatch(startListening());\r\n  };\r\n\r\n  const handleStop = () => {\r\n    dispatch(stopListening());\r\n  };\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetTranscript());\r\n    setPastedText(''); // Reset pasted text\r\n  };\r\n\r\n  const handleLanguageChange = (e) => {\r\n    setTargetLanguage(e.target.value);\r\n  };\r\n\r\n  const handlePaste = (e) => {\r\n    const text = e.target.value;\r\n    setPastedText(text); // Update pasted text state\r\n  };\r\n\r\n  return (\r\n    <div className=\"speech-to-text-container\">\r\n      <h2>Speech to Text Converter with Translation</h2>\r\n      <div className=\"controls\">\r\n        <button onClick={handleStart} disabled={isListening}>Start Listening</button>\r\n        <button onClick={handleStop} disabled={!isListening}>Stop Listening</button>\r\n        <button onClick={handleReset}>Reset Transcript</button>\r\n      </div>\r\n      <div className=\"language-selector\">\r\n        <label>Select Target Language:</label>\r\n        <select value={targetLanguage} onChange={handleLanguageChange}>\r\n          <option value=\"es\">Spanish</option>\r\n          <option value=\"fr\">French</option>\r\n          <option value=\"de\">German</option>\r\n          <option value=\"zh\">Chinese</option>\r\n          <option value=\"ar\">Arabic</option>\r\n          <option value=\"ur\">Urdu</option> {/* Added Urdu option */}\r\n        </select>\r\n      </div>\r\n      <textarea readOnly value={transcript} placeholder=\"Your speech will appear here...\" />\r\n      <textarea\r\n        value={pastedText}\r\n        onChange={handlePaste}\r\n        placeholder=\"Paste text to translate here...\"\r\n        rows=\"4\"\r\n      />\r\n      <textarea readOnly value={translatedText} placeholder=\"Translated text will appear here...\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechToText;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}